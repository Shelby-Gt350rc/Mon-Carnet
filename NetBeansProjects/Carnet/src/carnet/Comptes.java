/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Comptes.java
 * 
 */

package carnet;

import com.shelby.carnet.carnetUtils.Fichier;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;

/**
 *
 * @author Patrick-Noah
 */
public final class Comptes extends javax.swing.JPanel {
    
    private String [] listeInfos;
    private int id;
    private static final int TAILLE_ALPHABET = 26;
    private String texte;

    /** Creates new form Contact
     * @param liste
     * @param ni */

    public Comptes(String [] liste, int ni) {
        setVisible(true);
        initComponents();
        setListeInfos(liste);
        setId(ni); 
        colorierIdPair();
        afficheInfos();
    }


     /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        photoLbl = new javax.swing.JLabel();
        categorieLbl = new javax.swing.JLabel();
        compteLbl = new javax.swing.JLabel();
        decrypterBtn = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(390, 50));
        setMinimumSize(new java.awt.Dimension(390, 50));
        setPreferredSize(new java.awt.Dimension(380, 50));
        setRequestFocusEnabled(false);
        setLayout(new java.awt.GridLayout(1, 0));
        add(photoLbl);

        categorieLbl.setFont(new java.awt.Font("LM Roman Dunhill 10", 0, 24)); // NOI18N
        categorieLbl.setForeground(new java.awt.Color(0, 0, 153));
        categorieLbl.setText("catégorie");
        add(categorieLbl);

        compteLbl.setFont(new java.awt.Font("LM Roman Dunhill 10", 1, 24)); // NOI18N
        compteLbl.setForeground(new java.awt.Color(0, 0, 153));
        compteLbl.setText("compte");
        add(compteLbl);

        decrypterBtn.setFont(new java.awt.Font("LM Roman Dunhill 10", 1, 18)); // NOI18N
        decrypterBtn.setForeground(new java.awt.Color(0, 102, 0));
        decrypterBtn.setText("Décrypter");
        decrypterBtn.setToolTipText("Afficher votre mot de passe");
        decrypterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrypterBtnActionPerformed(evt);
            }
        });
        add(decrypterBtn);
    }// </editor-fold>//GEN-END:initComponents

    private void decrypterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrypterBtnActionPerformed
        reAuthentification();
    }//GEN-LAST:event_decrypterBtnActionPerformed
  private String nom, prenom, url;
  
  private void afficheInfos(){
      categorieLbl.setText(listeInfos[0]);
      compteLbl.setText(listeInfos[1]);
      affichePhotos();
  }
  private  void affichePhotos(){
      //Creer un icon
      ImageIcon iconPhotos = new ImageIcon(listeInfos[2]);
      //Transformer l'icone en image
      Image  uneImage = iconPhotos.getImage();
      //reduire la taille de l'image de 50%
      uneImage = uneImage.getScaledInstance(50, 50, Image.SCALE_SMOOTH);
      //transformer l'image en Icon
      iconPhotos.setImage(uneImage);
      photoLbl.setIcon(iconPhotos);
  }
  
  private void setCouleur(JLabel tmp){
      tmp.setBackground(Color.white);
      tmp.setOpaque(true);
  } 
  
  private void colorierIdPair(){
      if(id %  2 == 0){
          setCouleur(compteLbl);
          setCouleur(categorieLbl);
          setCouleur(photoLbl);
      }
  }
  
  

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel categorieLbl;
    private javax.swing.JLabel compteLbl;
    private javax.swing.JButton decrypterBtn;
    private javax.swing.JLabel photoLbl;
    // End of variables declaration//GEN-END:variables

    public String[] getListeInfos() {
        return listeInfos;
    }

    public void setListeInfos(String[] listeInfos) {
        this.listeInfos = listeInfos;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

 //Boite de dialogue pour la re authentification lors du decryptage
    private void reAuthentification() {
           JPanel panel = new JPanel();
        JLabel label = new JLabel("Entrez votre password:");
        JPasswordField pass = new JPasswordField(10);
        label.setFont(new Font("Palatino Linotype", 0, 14));
                panel.add(label);
                panel.add(pass);
                String[] options = new String[]{"Décrypter", "Annuler"};
                int option = JOptionPane.showOptionDialog(null, panel, "Controle d'identité",
                                                             JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                                                            null, options, options[0]);
if(option == 0) // valider Decrypter
{ 
    char[] password = pass.getPassword();
    String  pwdSaisie = String.copyValueOf(password);
     Fichier verifDonneeSaisie = new Fichier(); 
    if(verifDonneeSaisie.IsAdmin(pwdSaisie.toString())){
        String[] infos = getListeInfos();
        String nomCpt = infos[0] ;
        if("Cesar".equals(infos[9])){
            int clef = Integer.parseInt(infos[10]);
            String pwdDecrypte =infos[8];
            String monPwd =decrypter(clef, pwdDecrypte);
            JOptionPane.showMessageDialog(null,"Compte "+nomCpt+" votre mot de passe  est : "+monPwd," Information sur le passe",JOptionPane.INFORMATION_MESSAGE);
        }else  if("Binaire".equals(infos[9])){
             String pwd = infos[12];
             JOptionPane.showMessageDialog(null,"Compte "+nomCpt+" votre mot de passe  est : "+pwd," Information sur le passe",JOptionPane.INFORMATION_MESSAGE);
        }else  if("Playfair".equals(infos[9])){
            System.out.println("Playfair");
        }else{
            System.out.println("Vigenere");
        } 
    }
    else{
        if("".equals(new String(password))){
             JOptionPane.showMessageDialog(null,"Voulez vous toujours décrypter cette information ?" ," Information sur le passe",JOptionPane.QUESTION_MESSAGE);
        }else
         JOptionPane.showMessageDialog(null,"Vous pas les privilèges réquis !!!" ," Information sur le passe",JOptionPane.ERROR_MESSAGE);
    }
}
    }
    
    
    
    
    
    public String encrypter(int decalage,String sms) {
        this.texte=sms;
        StringBuilder sb = new StringBuilder(texte.length());
        for (char c : texte.toCharArray()) {
            if (c >='a' && c <= 'z') {
                sb.append(decaleVar(c, decalage, 'a'));
            } else if (c > 'A' && c < 'Z') {
                sb.append(decaleVar(c, decalage, 'A'));
            } else {
                sb.append(c);
            }
        }
        return sb.toString();
    }
     
    public String decrypter(int decalage, String sms) {
         
        return encrypter(-decalage,sms);
    }
 
    private char decaleVar(char caractere, int decalage, char caractereBase) {
        int base = (int) caractereBase;
        if (decalage < 0) {
            base += TAILLE_ALPHABET - 1;
        }
        return (char) ((((int) caractere) - base + decalage) % TAILLE_ALPHABET + base);
    }

}
