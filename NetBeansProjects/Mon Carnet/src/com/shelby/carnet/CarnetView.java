/*
 * CarnetView.java
 */

package com.shelby.carnet;

import java.awt.Dimension;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 * The application's main frame.
 */
public class CarnetView extends FrameView {

    public CarnetView(SingleFrameApplication app) {
        super(app);

        initComponents();
        //initialisation des Comptes
        initComptes();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = CarnetApp.getApplication().getMainFrame();
            aboutBox = new CarnetAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        CarnetApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        boiteGlobalePnl = new javax.swing.JPanel();
        boiteAvecSroll = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        boiteComptesPnl = new javax.swing.JPanel();
        boiteInformationsPnl = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N

        boiteGlobalePnl.setName("boiteGlobalePnl"); // NOI18N
        boiteGlobalePnl.setLayout(new java.awt.GridLayout(1, 2));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.shelby.carnet.CarnetApp.class).getContext().getResourceMap(CarnetView.class);
        boiteAvecSroll.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("boiteAvecSroll.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("LM Roman Dunhill 10", 0, 24), new java.awt.Color(0, 0, 153))); // NOI18N
        boiteAvecSroll.setName("boiteAvecSroll"); // NOI18N

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        boiteComptesPnl.setName("boiteComptesPnl"); // NOI18N

        javax.swing.GroupLayout boiteComptesPnlLayout = new javax.swing.GroupLayout(boiteComptesPnl);
        boiteComptesPnl.setLayout(boiteComptesPnlLayout);
        boiteComptesPnlLayout.setHorizontalGroup(
            boiteComptesPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 275, Short.MAX_VALUE)
        );
        boiteComptesPnlLayout.setVerticalGroup(
            boiteComptesPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 404, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(boiteComptesPnl);

        javax.swing.GroupLayout boiteAvecSrollLayout = new javax.swing.GroupLayout(boiteAvecSroll);
        boiteAvecSroll.setLayout(boiteAvecSrollLayout);
        boiteAvecSrollLayout.setHorizontalGroup(
            boiteAvecSrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        boiteAvecSrollLayout.setVerticalGroup(
            boiteAvecSrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        boiteGlobalePnl.add(boiteAvecSroll);

        boiteInformationsPnl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("boiteInformationsPnl.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("LM Roman Dunhill 10", 0, 24), new java.awt.Color(0, 0, 153))); // NOI18N
        boiteInformationsPnl.setName("boiteInformationsPnl"); // NOI18N

        javax.swing.GroupLayout boiteInformationsPnlLayout = new javax.swing.GroupLayout(boiteInformationsPnl);
        boiteInformationsPnl.setLayout(boiteInformationsPnlLayout);
        boiteInformationsPnlLayout.setHorizontalGroup(
            boiteInformationsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );
        boiteInformationsPnlLayout.setVerticalGroup(
            boiteInformationsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 406, Short.MAX_VALUE)
        );

        boiteGlobalePnl.add(boiteInformationsPnl);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boiteGlobalePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boiteGlobalePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.shelby.carnet.CarnetApp.class).getContext().getActionMap(CarnetView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 416, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boiteAvecSroll;
    private javax.swing.JPanel boiteComptesPnl;
    private javax.swing.JPanel boiteGlobalePnl;
    private javax.swing.JPanel boiteInformationsPnl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;

    private void initComptes() {
        //declaration d'un tableau a 2 dim
        String [][] tabComptes ={
                                                    {"Gmail","Patrick","../Photos/photos.png"},
                                                    {"Gmail","Dr Zhen","../Photos/photos.png"},
                                                    {"Gmail","Shelby","../Photos/photos.png"},
                                                    {"Gmail","Patrick","../Photos/photos.png"},
                                                    {"Gmail","Dr Zhen","../Photos/photos.png"},
                                                    {"Gmail","Shelby","../Photos/photos.png"},
                                                    {"Gmail","Patrick","../Photos/photos.png"},
                                                    {"Gmail","Dr Zhen","../Photos/photos.png"},
                                                    {"Gmail","Shelby","../Photos/photos.png"},
                                                    {"Gmail","Patrick","../Photos/photos.png"},
                                                    {"Gmail","Dr Zhen","../Photos/photos.png"},
                                                    {"Gmail","Shelby","../Photos/photos.png"},
                                                    {"Gmail","Patrick","../Photos/photos.png"},
                                                    {"Gmail","Dr Zhen","../Photos/photos.png"},
                                                    {"Gmail","Shelby","../Photos/photos.png"},
                                                    {"Gmail","Patrick","../Photos/photos.png"},
                                                    {"Gmail","Dr Zhen","../Photos/photos.png"},
                                                    {"Gmail","Shelby","../Photos/photos.png"},
                                                    {"Gmail","Ryusaky","../Photos/photos.png"}
                                          };
        //Declaration de la variable de type dimession pour recuperer la taille de nos objet
        Dimension taille;
                                 listeComptes  = new Comptes[tabComptes.length];
                                for (int i = 0; i < tabComptes.length; i++) {
                                    listeComptes[i] = new Comptes(tabComptes[i], i);
                                    taille = listeComptes[i].getPreferredSize();
                                    //2 represente le pixel d'ecart entre chaque composant
                                    listeComptes[i].setBounds(0, i*(taille.height+2), taille.width, taille.height); 
                                    boiteComptesPnl.add(listeComptes[i]);
                                    //Modifier la taille de la boite Compte en fonction du nbre d'element ajouter
                                    taille.setSize(taille.width,(i+1)*(taille.height+2));
                                    boiteComptesPnl.setPreferredSize(taille);
                                    //Ajout des elements a la boite de comptes
                                    boiteComptesPnl.validate();
                                }
                                
        }
    
    private Comptes[] listeComptes;
      
}
